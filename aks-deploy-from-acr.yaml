apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-spring-devops-pipeline-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-demo-devops-pipeline
  template:
    metadata:
      labels:
        app: spring-demo-devops-pipeline
    spec:
      containers:
        - name: my-spring-demo-devops-pipeline
          image: azurecontainer99.azurecr.io/joaof-design/spring-demo-devops-pipeline:#{Build.BuildId}#
          imagePullPolicy: Always
          ports:
            - containerPort: 8086
# service type loadbalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-demo-devops-pipeline
    k8s-app: spring-demo-devops-pipeline
  name: spring-demo-devops-pipeline
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8086
  type: LoadBalancer
  selector:
    app: spring-demo-devops-pipeline

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devops-pipeline-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /demo-devops(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: spring-demo-devops-pipeline
                port:
                  number: 80